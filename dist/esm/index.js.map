{"version":3,"file":"index.js","sources":["../../src/helpers.ts","../../src/vuexmodule.ts","../../src/module/stateFactory.ts","../../src/module/staticGenerators.ts","../../src/module/index.ts","../../src/config.ts","../../src/action.ts","../../src/mutation.ts","../../src/mutationaction.ts"],"sourcesContent":["/**\n * Takes the properties on object from parameter source and adds them to the object\n * parameter target\n * @param {object} target  Object to have properties copied onto from y\n * @param {object} source  Object with properties to be copied to x\n */\nexport function addPropertiesToObject(target: any, source: any) {\n  for (let k of Object.keys(source || {})) {\n    Object.defineProperty(target, k, {\n      get: () => source[k]\n    })\n  }\n}\n\n/**\n * Returns a namespaced name of the module to be used as a store getter\n * @param module\n */\nexport function getModuleName(module: any): string {\n  if (!module._vmdModuleName) {\n    throw new Error(`ERR_GET_MODULE_NAME : Could not get module accessor.\n      Make sure your module has name, we can't make accessors for unnamed modules\n      i.e. @Module({ name: 'something' })`)\n  }\n  return `vuexModuleDecorators/${module._vmdModuleName}`\n}\n","import {\n  ActionTree,\n  GetterTree,\n  Module as Mod,\n  ModuleTree,\n  MutationTree,\n  Store,\n  ActionContext\n} from 'vuex'\nimport { getModuleName } from './helpers'\n\nexport class VuexModule<S = ThisType<any>, R = any> implements Mod<S, R> {\n  /*\n   * To use with `extends Class` syntax along with decorators\n   */\n  static namespaced?: boolean\n  static state?: any | (() => any)\n  static getters?: GetterTree<any, any>\n  static actions?: ActionTree<any, any>\n  static mutations?: MutationTree<any>\n  static modules?: ModuleTree<any>\n\n  /*\n   * To use with `new VuexModule(<ModuleOptions>{})` syntax\n   */\n\n  modules?: ModuleTree<any>\n  namespaced?: boolean\n  getters?: GetterTree<S, R>\n  state?: S | (() => S)\n  mutations?: MutationTree<S>\n  actions?: ActionTree<S, R>\n  context!: ActionContext<S, R>\n\n  constructor(module: Mod<S, any>) {\n    this.actions = module.actions\n    this.mutations = module.mutations\n    this.state = module.state\n    this.getters = module.getters\n    this.namespaced = module.namespaced\n    this.modules = module.modules\n  }\n}\ntype ConstructorOf<C> = { new (...args: any[]): C }\n\nexport function getModule<M extends VuexModule>(\n  moduleClass: ConstructorOf<M>,\n  store?: Store<any>\n): M {\n  const moduleName = getModuleName(moduleClass)\n  if (store && store.getters[moduleName]) {\n    return store.getters[moduleName]\n  } else if ((moduleClass as any)._statics) {\n    return (moduleClass as any)._statics\n  }\n\n  const genStatic: (providedStore?: Store<any>) => M = (moduleClass as any)._genStatic\n  if (!genStatic) {\n    throw new Error(`ERR_GET_MODULE_NO_STATICS : Could not get module accessor.\n      Make sure your module has name, we can't make accessors for unnamed modules\n      i.e. @Module({ name: 'something' })`)\n  }\n\n  const storeModule = genStatic(store)\n\n  if (store) {\n    store.getters[moduleName] = storeModule\n  } else {\n    ;(moduleClass as any)._statics = storeModule\n  }\n\n  return storeModule\n}\n","import { Module as Mod } from 'vuex'\n\nconst reservedKeys = ['actions', 'getters', 'mutations', 'modules', 'state', 'namespaced', 'commit']\nexport function stateFactory<S>(module: Function & Mod<S, any>) {\n  const state = new module.prototype.constructor({})\n  const s = {} as S\n  Object.keys(state).forEach((key: string) => {\n    if (reservedKeys.indexOf(key) !== -1) {\n      if (typeof state[key] !== 'undefined') {\n        throw new Error(\n          `ERR_RESERVED_STATE_KEY_USED: You cannot use the following\n        ['actions', 'getters', 'mutations', 'modules', 'state', 'namespaced', 'commit']\n        as fields in your module. These are reserved as they have special purpose in Vuex`\n        )\n      }\n      return\n    }\n    if (state.hasOwnProperty(key)) {\n      if (typeof state[key] !== 'function') {\n        ;(s as any)[key] = state[key]\n      }\n    }\n  })\n\n  return s\n}\n","import { ActionTree, GetterTree, Module as Mod, MutationTree } from 'vuex'\nimport { DynamicModuleOptions } from '../moduleoptions'\n\nexport function staticStateGenerator<S extends Object>(\n  module: Function & Mod<S, any>,\n  modOpt: DynamicModuleOptions,\n  statics: any\n) {\n  const state: S = modOpt.stateFactory ? (module as any).state() : module.state\n  Object.keys(state).forEach((key) => {\n    if (state.hasOwnProperty(key)) {\n      // If not undefined or function means it is a state value\n      if (['undefined', 'function'].indexOf(typeof (state as any)[key]) === -1) {\n        Object.defineProperty(statics, key, {\n          get() {\n            const path = modOpt.name.split('/')\n            let data = statics.store.state\n            for (let segment of path) {\n              data = data[segment]\n            }\n            return data[key]\n          }\n        })\n      }\n    }\n  })\n}\n\nexport function staticGetterGenerator<S>(\n  module: Function & Mod<S, any>,\n  modOpt: DynamicModuleOptions,\n  statics: any\n) {\n  Object.keys(module.getters as GetterTree<S, any>).forEach((key) => {\n    const moduleKey = module.namespaced ? `${modOpt.name}/${key}` : key\n    Object.defineProperty(statics, key, {\n      configurable: !!modOpt.configurableGetters,\n      get() {\n        return statics.store.getters[moduleKey]\n      }\n    })\n  })\n}\n\nexport function staticMutationGenerator<S>(\n  module: Function & Mod<S, any>,\n  modOpt: DynamicModuleOptions,\n  statics: any\n) {\n  Object.keys(module.mutations as MutationTree<S>).forEach((key) => {\n    if (module.namespaced) {\n      statics[key] = function (...args: any[]) {\n        statics.store.commit(`${modOpt.name}/${key}`, ...args)\n      }\n    } else {\n      statics[key] = function (...args: any[]) {\n        statics.store.commit(key, ...args)\n      }\n    }\n  })\n}\n\nexport function staticActionGenerators<S>(\n  module: Function & Mod<S, any>,\n  modOpt: DynamicModuleOptions,\n  statics: any\n) {\n  Object.keys(module.actions as ActionTree<S, any>).forEach((key) => {\n    if (module.namespaced) {\n      statics[key] = async function (...args: any[]) {\n        return statics.store.dispatch(`${modOpt.name}/${key}`, ...args)\n      }\n    } else {\n      statics[key] = async function (...args: any[]) {\n        return statics.store.dispatch(key, ...args)\n      }\n    }\n  })\n}\n","import { GetterTree, Module as Mod, Store } from 'vuex'\nimport { DynamicModuleOptions, ModuleOptions } from '../moduleoptions'\nimport { stateFactory as sf } from './stateFactory'\nimport { addPropertiesToObject } from '../helpers'\nimport {\n  staticActionGenerators,\n  staticGetterGenerator,\n  staticMutationGenerator,\n  staticStateGenerator\n} from './staticGenerators'\n\nfunction registerDynamicModule<S>(module: Mod<S, any>, modOpt: DynamicModuleOptions) {\n  if (!modOpt.name) {\n    throw new Error('Name of module not provided in decorator options')\n  }\n\n  if (!modOpt.store) {\n    throw new Error('Store not provided in decorator options when using dynamic option')\n  }\n\n  modOpt.store.registerModule(\n    modOpt.name, // TODO: Handle nested modules too in future\n    module,\n    { preserveState: modOpt.preserveState || false }\n  )\n}\n\nfunction addGettersToModule<S>(\n  targetModule: Function & Mod<S, any>,\n  srcModule: Function & Mod<S, any>\n) {\n  Object.getOwnPropertyNames(srcModule.prototype).forEach((funcName: string) => {\n    const descriptor = Object.getOwnPropertyDescriptor(\n      srcModule.prototype,\n      funcName\n    ) as PropertyDescriptor\n    if (descriptor.get && targetModule.getters) {\n      targetModule.getters[funcName] = function (\n        state: S,\n        getters: GetterTree<S, any>,\n        rootState: any,\n        rootGetters: GetterTree<any, any>\n      ) {\n        const thisObj = { context: { state, getters, rootState, rootGetters } }\n        addPropertiesToObject(thisObj, state)\n        addPropertiesToObject(thisObj, getters)\n        const got = (descriptor.get as Function).call(thisObj)\n        return got\n      }\n    }\n  })\n}\n\nfunction moduleDecoratorFactory<S>(moduleOptions: ModuleOptions) {\n  return function <TFunction extends Function>(constructor: TFunction): TFunction | void {\n    const module: Function & Mod<S, any> = constructor\n    const stateFactory = () => sf(module)\n\n    if (!module.state) {\n      module.state = moduleOptions && moduleOptions.stateFactory ? stateFactory : stateFactory()\n    }\n    if (!module.getters) {\n      module.getters = {} as GetterTree<S, any>\n    }\n    if (!module.namespaced) {\n      module.namespaced = moduleOptions && moduleOptions.namespaced\n    }\n    let parentModule = Object.getPrototypeOf(module)\n    while (parentModule.name !== 'VuexModule' && parentModule.name !== '') {\n      addGettersToModule(module, parentModule)\n      parentModule = Object.getPrototypeOf(parentModule)\n    }\n    addGettersToModule(module, module)\n    const modOpt = moduleOptions as DynamicModuleOptions\n    if (modOpt.name) {\n      Object.defineProperty(constructor, '_genStatic', {\n        value: (store?: Store<any>) => {\n          let statics = { store: store || modOpt.store }\n          if (!statics.store) {\n            throw new Error(`ERR_STORE_NOT_PROVIDED: To use getModule(), either the module\n            should be decorated with store in decorator, i.e. @Module({store: store}) or\n            store should be passed when calling getModule(), i.e. getModule(MyModule, this.$store)`)\n          }\n          // ===========  For statics ==============\n          // ------ state -------\n          staticStateGenerator(module, modOpt, statics)\n\n          // ------- getters -------\n          if (module.getters) {\n            staticGetterGenerator(module, modOpt, statics)\n          }\n\n          // -------- mutations --------\n          if (module.mutations) {\n            staticMutationGenerator(module, modOpt, statics)\n          }\n          // -------- actions ---------\n          if (module.actions) {\n            staticActionGenerators(module, modOpt, statics)\n          }\n          return statics\n        }\n      })\n\n      Object.defineProperty(constructor, '_vmdModuleName', {\n        value: modOpt.name\n      })\n    }\n\n    if (modOpt.dynamic) {\n      registerDynamicModule(module, modOpt)\n    }\n    return constructor\n  }\n}\n\nexport function Module<S>(module: Function & Mod<S, any>): void\nexport function Module<S>(options: ModuleOptions): ClassDecorator\n\nexport function Module<S>(modOrOpt: ModuleOptions | (Function & Mod<S, any>)) {\n  if (typeof (modOrOpt as any) === 'function') {\n    /*\n     * @Module decorator called without options (directly on the class definition)\n     */\n    moduleDecoratorFactory({})(modOrOpt as Function & Mod<S, any>)\n  } else {\n    /*\n     * @Module({...}) decorator called with options\n     */\n    return moduleDecoratorFactory(modOrOpt)\n  }\n}\n","export const config: IConfig = {}\n\nexport interface IConfig {\n  rawError?: boolean\n}\n","import { Action as Act, ActionContext, Module as Mod, Payload } from 'vuex'\nimport { getModule, VuexModule } from './vuexmodule'\nimport { addPropertiesToObject, getModuleName } from './helpers'\nimport { config } from './config'\n\n/**\n * Parameters that can be passed to the @Action decorator\n */\nexport interface ActionDecoratorParams {\n  commit?: string\n  rawError?: boolean\n  root?: boolean\n}\nfunction actionDecoratorFactory<T>(params?: ActionDecoratorParams): MethodDecorator {\n  const { commit = undefined, rawError = !!config.rawError, root = false } = params || {}\n  return function (target: Object, key: string | symbol, descriptor: TypedPropertyDescriptor<any>) {\n    const module = target.constructor as Mod<T, any>\n    if (!module.hasOwnProperty('actions')) {\n      module.actions = Object.assign({}, module.actions)\n    }\n    const actionFunction: Function = descriptor.value\n    const action: Act<typeof target, any> = async function (\n      context: ActionContext<typeof target, any>,\n      payload: Payload\n    ) {\n      try {\n        let actionPayload = null\n\n        if ((module as any)._genStatic) {\n          const moduleName = getModuleName(module)\n          const moduleAccessor = context.rootGetters[moduleName]\n            ? context.rootGetters[moduleName]\n            : getModule(module as typeof VuexModule)\n          moduleAccessor.context = context\n          actionPayload = await actionFunction.call(moduleAccessor, payload)\n        } else {\n          const thisObj = { context }\n          addPropertiesToObject(thisObj, context.state)\n          addPropertiesToObject(thisObj, context.getters)\n          actionPayload = await actionFunction.call(thisObj, payload)\n        }\n        if (commit) {\n          context.commit(commit, actionPayload)\n        }\n        return actionPayload\n      } catch (e: any) {\n        throw rawError\n          ? e\n          : new Error(\n              'ERR_ACTION_ACCESS_UNDEFINED: Are you trying to access ' +\n                'this.someMutation() or this.someGetter inside an @Action? \\n' +\n                'That works only in dynamic modules. \\n' +\n                'If not dynamic use this.context.commit(\"mutationName\", payload) ' +\n                'and this.context.getters[\"getterName\"]' +\n                '\\n' +\n                new Error(`Could not perform action ${key.toString()}`).stack +\n                '\\n' +\n                e.stack\n            )\n      }\n    }\n    module.actions![key as string] = root ? { root, handler: action } : action\n  }\n}\n\nexport function Action<T, R>(\n  target: T,\n  key: string | symbol,\n  descriptor: TypedPropertyDescriptor<(...args: any[]) => R>\n): void\nexport function Action<T>(params: ActionDecoratorParams): MethodDecorator\n\n/**\n * The @Action decorator turns an async function into an Vuex action\n *\n * @param targetOrParams the module class\n * @param key name of the action\n * @param descriptor the action function descriptor\n * @constructor\n */\nexport function Action<T, R>(\n  targetOrParams: T | ActionDecoratorParams,\n  key?: string | symbol,\n  descriptor?: TypedPropertyDescriptor<(...args: any[]) => R>\n) {\n  if (!key && !descriptor) {\n    /*\n     * This is the case when `targetOrParams` is params.\n     * i.e. when used as -\n     * <pre>\n        @Action({commit: 'incrCount'})\n        async getCountDelta() {\n          return 5\n        }\n     * </pre>\n     */\n    return actionDecoratorFactory(targetOrParams as ActionDecoratorParams)\n  } else {\n    /*\n     * This is the case when @Action is called on action function\n     * without any params\n     * <pre>\n     *   @Action\n     *   async doSomething() {\n     *    ...\n     *   }\n     * </pre>\n     */\n    actionDecoratorFactory()(targetOrParams, key!, descriptor!)\n  }\n}\n","import { Module as Mod, Mutation as Mut, Payload } from 'vuex'\n\nexport function Mutation<T extends Object, R>(\n  target: T,\n  key: string | symbol,\n  descriptor: TypedPropertyDescriptor<(...args: any[]) => R>\n) {\n  const module = target.constructor as Mod<T, any>\n  if (!module.hasOwnProperty('mutations')) {\n    module.mutations = Object.assign({}, module.mutations)\n  }\n  const mutationFunction: Function = descriptor.value!\n  const mutation: Mut<typeof target> = function (state: typeof target, payload: Payload) {\n    mutationFunction.call(state, payload)\n  }\n  module.mutations![key as string] = mutation\n}\n","import { Action as Act, ActionContext, Module as Mod, Mutation as Mut, Payload, Store } from 'vuex'\nimport { addPropertiesToObject } from './helpers'\n\nexport interface MutationActionParams<M> {\n  mutate?: (keyof Partial<M>)[]\n  rawError?: boolean\n  root?: boolean\n}\n\nfunction mutationActionDecoratorFactory<T extends Object>(params: MutationActionParams<T>) {\n  return function (\n    target: T,\n    key: string | symbol,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<Partial<T> | undefined>>\n  ) {\n    const module = target.constructor as Mod<T, any>\n    if (!module.hasOwnProperty('mutations')) {\n      module.mutations = Object.assign({}, module.mutations)\n    }\n    if (!module.hasOwnProperty('actions')) {\n      module.actions = Object.assign({}, module.actions)\n    }\n    const mutactFunction = descriptor.value as (payload: any) => Promise<any>\n\n    const action: Act<typeof target, any> = async function (\n      context: ActionContext<typeof target, any>,\n      payload: Payload\n    ) {\n      try {\n        const thisObj = { context }\n        addPropertiesToObject(thisObj, context.state)\n        addPropertiesToObject(thisObj, context.getters)\n        const actionPayload = await mutactFunction.call(thisObj, payload)\n        if (actionPayload === undefined) return\n        context.commit(key as string, actionPayload)\n      } catch (e: any) {\n        if (params.rawError) {\n          throw e\n        } else {\n          console.error('Could not perform action ' + key.toString())\n          console.error(e)\n          return Promise.reject(e)\n        }\n      }\n    }\n\n    const mutation: Mut<typeof target> = function (\n      state: typeof target | Store<T>,\n      payload: Payload & { [k in keyof T]: any }\n    ) {\n      if (!params.mutate) {\n        params.mutate = Object.keys(payload) as (keyof T)[]\n      }\n      for (let stateItem of params.mutate) {\n        if (state.hasOwnProperty(stateItem) && payload.hasOwnProperty(stateItem)) {\n          ;(state as T)[stateItem] = payload[stateItem]\n        } else {\n          throw new Error(`ERR_MUTATE_PARAMS_NOT_IN_PAYLOAD\n          In @MutationAction, mutate: ['a', 'b', ...] array keys must\n          match with return type = {a: {}, b: {}, ...} and must\n          also be in state.`)\n        }\n      }\n    }\n    module.actions![key as string] = params.root ? { root: true, handler: action } : action\n    module.mutations![key as string] = mutation\n  }\n}\n\nexport function MutationAction<K, T extends K>(\n  target: { [k in keyof T]: T[k] | null },\n  key: string | symbol,\n  descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<K>>\n): void\n\nexport function MutationAction<T>(\n  params: MutationActionParams<T>\n): (\n  target: T,\n  key: string | symbol,\n  descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>\n) => void\n\n/**\n * The @MutationAction decorator turns this into an action that further calls a mutation\n * Both the action and the mutation are generated for you\n *\n * @param paramsOrTarget the params or the target class\n * @param key the name of the function\n * @param descriptor the function body\n * @constructor\n */\nexport function MutationAction<T, K, M extends K>(\n  paramsOrTarget: MutationActionParams<T> | M,\n  key?: string | symbol,\n  descriptor?: TypedPropertyDescriptor<(...args: any[]) => Promise<Partial<K> | undefined>>\n):\n  | ((\n      target: T,\n      key: string | symbol,\n      descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<Partial<T> | undefined>>\n    ) => void)\n  | void {\n  if (!key && !descriptor) {\n    /*\n     * This is the case when `paramsOrTarget` is params.\n     * i.e. when used as -\n     * <pre>\n        @MutationAction({mutate: ['incrCount']})\n        async getCountDelta() {\n          return {incrCount: 5}\n        }\n     * </pre>\n     */\n    return mutationActionDecoratorFactory(paramsOrTarget as MutationActionParams<T>)\n  } else {\n    /*\n     * This is the case when `paramsOrTarget` is target.\n     * i.e. when used as -\n     * <pre>\n        @MutationAction\n        async getCountDelta() {\n          return {incrCount: 5}\n        }\n     * </pre>\n     */\n    mutationActionDecoratorFactory({} as MutationActionParams<K>)(\n      paramsOrTarget as K,\n      key!,\n      descriptor!\n    )\n  }\n}\n"],"names":["stateFactory","sf"],"mappings":"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"}